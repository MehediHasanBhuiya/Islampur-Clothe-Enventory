// <auto-generated />
using System;
using IslampurClotheEnventory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IslampurClotheEnventory.Data.Migrations
{
    [DbContext(typeof(IslampurDbContext))]
    [Migration("20190619103444_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerAddress");

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerPhoneNumber");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsStoed");

                    b.Property<string>("ProductName");

                    b.Property<double>("ProductPurchesPrice");

                    b.Property<int>("ProductQuentity");

                    b.Property<double>("ProductSalePrice");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.PurchesInfo", b =>
                {
                    b.Property<int>("PurchesId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProductId");

                    b.Property<DateTime>("PurchesDate");

                    b.Property<double>("PurchesOnCash");

                    b.Property<double>("PurchesOnDebt");

                    b.Property<string>("PurchesPersonEmail");

                    b.Property<string>("PurchesPersonName");

                    b.Property<string>("PurchesPersonPhoneNumber");

                    b.Property<double>("PurchesPrice");

                    b.Property<int>("PurchesQuentity");

                    b.HasKey("PurchesId");

                    b.HasIndex("ProductId");

                    b.ToTable("PurchesInfos");
                });

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<double>("OnCash");

                    b.Property<double>("OnDebt");

                    b.Property<int>("ProductId");

                    b.Property<double>("SalePrice");

                    b.Property<int>("SaleQuentity");

                    b.Property<DateTime>("SaleTime");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.PurchesInfo", b =>
                {
                    b.HasOne("IslampurClotheEnventory.Data.Models.Product", "Product")
                        .WithMany("PurchesInfos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IslampurClotheEnventory.Data.Models.Sale", b =>
                {
                    b.HasOne("IslampurClotheEnventory.Data.Models.Customer", "Customers")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IslampurClotheEnventory.Data.Models.Product", "Products")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
